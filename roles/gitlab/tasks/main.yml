---
- name: Install required dependencies
  dnf:
    name:
      - curl
      - policycoreutils
      - openssh-server
      - perl
    state: present

- name: Enable and start SSH
  systemd:
    name: sshd
    state: started
    enabled: true

- name: Enable and start firewalld
  systemd:
    name: firewalld
    state: started
    enabled: true
- name: Ouvrir les ports nécessaires dans firewalld
  firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: yes
  loop:
    - 80/tcp
    - 443/tcp
- name: Créer un fichier swap de 4 Go
  command: fallocate -l 4G /swapfile
  args:
    creates: /swapfile

- name: Définir les permissions du fichier swap
  file:
    path: /swapfile
    mode: '0600'

- name: Vérifier si /swapfile est un fichier swap
  command: file /swapfile
  register: swapfile_check

- name: Initialiser le fichier en tant que swap
  command: mkswap /swapfile
  when: "'swap file' not in swapfile_check.stdout"

- name: Activer le swap immédiatement
  command: swapon /swapfile
  register: swapon_result
  changed_when: "'already' not in swapon_result.stderr"
  failed_when: "'read swap header failed' in swapon_result.stderr"

- name: Ajouter l'entrée swap dans /etc/fstab pour activation au démarrage
  mount:
    name: none
    src: /swapfile
    fstype: swap
    opts: sw
    state: present

- name: créé le dossier pour les secrets
  file:
    path: /etc/gitlab/
    state: directory
    owner: root
    group: root 
    mode: '0755'

- name: copier secrets
  template:
    src: gitlab-secrets.json.j2
    dest: /etc/gitlab/gitlab-secrets.json
    owner: root
    group: root 
    mode: '0644'

- name: Add GitLab CE repository
  shell: curl https://packages.gitlab.com/install/repositories/gitlab/gitlab-ce/script.rpm.sh | bash
  args:
    creates: /etc/yum.repos.d/gitlab_gitlab-ce.repo

- name: Install GitLab CE
  dnf:
    name: gitlab-ce
    state: present

- name: Configure GitLab external URL
  lineinfile:
    path: /etc/gitlab/gitlab.rb
    regexp: '^external_url'
    line: 'external_url "https://gitlab-maralex.duckdns.org/"'
    create: yes

- name: Add Redis and PostgreSQL configuration to gitlab.rb
  blockinfile:
    path: /etc/gitlab/gitlab.rb
    marker: "# {mark} ANSIBLE MANAGED BLOCK - Redis & PostgreSQL config"
    block: |
      redis['enable'] = false

      # Default Redis connection
      gitlab_rails['redis_host'] = '51.38.239.212'
      gitlab_rails['redis_port'] = 6379
      gitlab_rails['redis_password'] = 'MAroot'

      # Set to true if instance is using Redis SSL
      gitlab_rails['redis_ssl'] = false
      # puma['worker_processes'] = 1
      # puma['min_threads'] = 1
      # puma['max_threads'] = 2

      # sidekiq['concurrency'] = 5

      # gitlab_rails['db_pool'] = 5

      prometheus_monitoring['enable'] = false
      # gitlab_pages['enable'] = false
      # mattermost['enable'] = false


      # nginx['listen_port'] = 80
      # nginx['listen_https'] = false


      # nginx['proxy_set_headers'] = {
      #   "Host" => "$http_host",
      #   "X-Real-IP" => "$remote_addr",
      #   "X-Forwarded-For" => "$proxy_add_x_forwarded_for",
      #   "X-Forwarded-Proto" => "https"
      # }
      nginx['enable'] = true
      nginx['listen_https'] = false  # Pas de HTTPS ici
      nginx['listen_port'] = 80

      # Pour éviter les redirections en HTTPS invalides
      nginx['redirect_http_to_https'] = false


      # Disable the bundled Omnibus provided PostgreSQL
      gitlab_rails['runners_enabled'] = true

    
      postgresql['enable'] = false

      # PostgreSQL connection details
      gitlab_rails['db_adapter'] = 'postgresql'
      gitlab_rails['db_encoding'] = 'unicode'
      gitlab_rails['db_host'] = '51.38.239.212'
      gitlab_rails['db_port'] = 5432
      gitlab_rails['db_password'] = 'MAroot'
      gitlab_rails['initial_root_password'] = "MartinAlex"
      gitlab_rails['initial_root_email'] = "root@gmail.com"
      gitlab_rails['time_zone'] = 'Europe/Paris'
      gitlab_rails['omniauth_enabled'] = true
      gitlab_rails['omniauth_allow_single_sign_on'] = ['openid_connect']
      gitlab_rails['omniauth_block_auto_created_users'] = false
      gitlab_rails['trusted_proxies'] = ['51.38.232.14']
      gitlab_rails['personal_access_token_enabled'] = true
      gitlab_rails['personal_access_token_scope_api_enabled'] = true

      
      gitlab_rails['omniauth_providers'] = [
        {
          name: "openid_connect", # do not change this parameter
          label: "Keycloak", # optional label for login button, defaults to "Openid Connect"
          args: {
            name: "openid_connect",
            scope: ["openid", "profile", "email"],
            response_type: "code",
            issuer:  "https://keycloak-maralex.duckdns.org/realms/master",
            client_auth_method: "query",
            discovery: true,
            uid_field: "preferred_username",
            pkce: true,
            client_options: {
              identifier: "gitlab",
              secret: "id2WAqrp1gRStdl0wV88YO87DfalODU5",
              redirect_uri: "https://gitlab-maralex.duckdns.org/users/auth/openid_connect/callback"
            }
          }
        }
      ]
      
- name: Reconfigure GitLab
  command: gitlab-ctl reconfigure

